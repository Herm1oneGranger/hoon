<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bosch.web.mapper.HoneyFeedbackMapper">

    <resultMap id="BaseResultMap" type="com.bosch.web.domain.HoneyFeedback">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <id property="channel" column="channel" jdbcType="VARCHAR"/>
            <result property="proId" column="pro_id" jdbcType="BIGINT"/>
            <result property="recordId" column="record_id" jdbcType="BIGINT"/>
            <result property="token" column="token" jdbcType="VARCHAR"/>
            <result property="createBy" column="create_by" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="remark" column="remark" jdbcType="VARCHAR"/>
            <result property="deleteFlag" column="delete_flag" jdbcType="INTEGER"/>
            <result property="pic" column="pic" jdbcType="VARCHAR"/>
            <result property="company" column="company" jdbcType="VARCHAR"/>
            <result property="phone" column="phone" jdbcType="VARCHAR"/>
            <result property="des" column="des" jdbcType="VARCHAR"/>
            <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="mail" column="mail" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,channel,pro_id,
        record_id,token,create_by,
        create_time,update_by,update_time,
        remark,delete_flag,pic,
        company,phone,des,
        name,mail,status
    </sql>

    <select id="getList" parameterType="com.bosch.web.domain.dto.HoneyFeedbackDTO" resultType="com.bosch.web.domain.vo.HoneyFeedbackVO">
        select
        f.id,f.channel,f.pro_id,
        f.record_id,f.token,f.create_by,
        f.create_time,f.update_by,f.update_time,
        f.remark,f.delete_flag,f.pic,
        f.company,f.phone,f.des,
        f.name,f.mail,f.status  ,p.order_no,p.order_qua,p.item_no,p.so,p.material,p.material_code
        from honey_feedback f
        LEFT JOIN honey_pro  p ON  f.token=p.token  and p.delete_flag=0 and f.delete_flag=0
        <if test="name != null and name != ''">and f.name  like concat('%', #{name}, '%') </if>
        <if test="mail != null and mail != ''">and f.mail  like concat('%', #{mail}, '%') </if>
        <if test="des != null and des != ''">and f.des  like concat('%', #{des}, '%') </if>
        <if test="company != null and company != ''">and f.company  like concat('%', #{company}, '%') </if>
        <if test="phone != null and phone != ''">and f.phone  like concat('%', #{phone}, '%') </if>
        <if test="channel != null and channel != ''">and f.channel  like concat('%', #{channel}, '%') </if>
        <if test="proId != null and proId != ''">and f.pro_id  = #{proId} </if>
        <if test="recordId != null and recordId != ''">and f.record_id  = #{recordId} </if>
        <if test="status != null and status != ''">and f.status  = #{status} </if>



    </select>

    <delete id="deleteByIds" parameterType="String">
        UPDATE honey_feedback SET delete_flag=1 WHERE id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="updateById">
        update honey_feedback
        <set>

            <if test="remark != null">remark = #{remark},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where id = #{id}
    </update>

</mapper>
